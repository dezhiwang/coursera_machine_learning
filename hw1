import numpy as np

data = np.loadtxt('/Users/edward/Downloads/MachineLearning/machine-learning'
                  '-ex1/ex1/ex1data1.txt', delimiter=',')

X = np.c_[np.ones(data.shape[0]),data[:,0]]
y = np.c_[data[:,1]]


def computeCost(X, y, theta = np.array([[0], [0]])):
    m = y.size
    h = X.dot(theta)
    J = 1 / float(2 * m) * np.sum(np.square(h - y))
    return (J)

def gradientDescent(X, y, theta=np.array([[0], [0]]), alpha=0.01,
                    num_iters=1500):
    m = y.size
    J_history = np.zeros(num_iters)
    for i in range(num_iters):
        h = X.dot(theta)
        theta = theta - alpha * (1 / float(m)) * (X.T.dot(h - y))
        J_history[i] = computeCost(X, y, theta)
    return theta, J_history

theta, cost = gradientDescent(X, y)
print theta, cost
